// Исправление текста, набранного когда забыл переключить раскладку :)
// Оригинал на perl:
// lat := "`~!@#$%^&qwertyuiop[]asdfghjkl;'zxcvbnm,./QWERTYUIOP{}ASDFGHJKL:"|ZXCVBNM<>?"
// cyr := "ёЁ!"№;%:?йцукенгшщзхъфывапролджэячсмитьбю.ЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭ/ЯЧСМИТЬБЮ,"
// while(<>) { eval "tr{$lat$cyr}{$cyr$lat}"; print; }
// FYI
// Настроить исправление раскладки набранного (выделенного) текста.
// - проверить наличие/установить утилиты
//     xdotool
//     xclip
// - Создать бинарник recode
//     - например, на perl (код выше) или на golang (go build -ldflags -w -s -o /home/dalp/go/src/recode/recode /home/dalp/go/src/recode/main.go)
//     - поместить его например в /usr/local/bin
// - Зайти: Настройки / Комбинация клавиш / Специальные действия
// - добавить группу [dalp], внутри нее создать действие
//      - Комментарий типа
//      recode to another charset
//  - Действие
//      xdotool key 'ctrl+c'; xclip -out -sel clip | recode | xclip -in -sel clip; xdotool key 'ctrl+v'

package main

import (
    "os"
    "strings"
)

var r *strings.Replacer
var pairs = []string{
    // туда:
    "`", "ё",
    "~", "Ё",
    "!", "!",
    "@", `"`,
    "#", "№",
    "$", ";",
    "%", "%",
    "^", ":",
    "&", "?",
    "q", "й",
    "w", "ц",
    "e", "у",
    "r", "к",
    "t", "е",
    "y", "н",
    "u", "г",
    "i", "ш",
    "o", "щ",
    "p", "з",
    "[", "х",
    "]", "ъ",
    "a", "ф",
    "s", "ы",
    "d", "в",
    "f", "а",
    "g", "п",
    "h", "р",
    "j", "о",
    "k", "л",
    "l", "д",
    ";", "ж",
    "'", "э",
    "z", "я",
    "x", "ч",
    "c", "с",
    "v", "м",
    "b", "и",
    "n", "т",
    "m", "ь",
    ",", "б",
    ".", "ю",
    "/", ".",
    "Q", "Й",
    "W", "Ц",
    "E", "У",
    "R", "К",
    "T", "Е",
    "Y", "Н",
    "U", "Г",
    "I", "Ш",
    "O", "Щ",
    "P", "З",
    "{", "Х",
    "}", "Ъ",
    "A", "Ф",
    "S", "Ы",
    "D", "В",
    "F", "А",
    "G", "П",
    "H", "Р",
    "J", "О",
    "K", "Л",
    "L", "Д",
    ":", "Ж",
    `"`, "Э",
    "|", "/",
    "Z", "Я",
    "X", "Ч",
    "C", "С",
    "V", "М",
    "B", "И",
    "N", "Т",
    "M", "Ь",
    "<", "Б",
    ">", "Ю",
    "?", ",",
    // ... и обратно
    "ё", "`",
    "Ё", "~",
    "!", "!",
    `"`, "@",
    "№", "#",
    ";", "$",
    "%", "%",
    ":", "^",
    "?", "&",
    "й", "q",
    "ц", "w",
    "у", "e",
    "к", "r",
    "е", "t",
    "н", "y",
    "г", "u",
    "ш", "i",
    "щ", "o",
    "з", "p",
    "х", "[",
    "ъ", "]",
    "ф", "a",
    "ы", "s",
    "в", "d",
    "а", "f",
    "п", "g",
    "р", "h",
    "о", "j",
    "л", "k",
    "д", "l",
    "ж", ";",
    "э", "'",
    "я", "z",
    "ч", "x",
    "с", "c",
    "м", "v",
    "и", "b",
    "т", "n",
    "ь", "m",
    "б", ",",
    "ю", ".",
    ".", "/",
    "Й", "Q",
    "Ц", "W",
    "У", "E",
    "К", "R",
    "Е", "T",
    "Н", "Y",
    "Г", "U",
    "Ш", "I",
    "Щ", "O",
    "З", "P",
    "Х", "{",
    "Ъ", "}",
    "Ф", "A",
    "Ы", "S",
    "В", "D",
    "А", "F",
    "П", "G",
    "Р", "H",
    "О", "J",
    "Л", "K",
    "Д", "L",
    "Ж", ":",
    "Э", `"`,
    "/", "|",
    "Я", "Z",
    "Ч", "X",
    "С", "C",
    "М", "V",
    "И", "B",
    "Т", "N",
    "Ь", "M",
    "Б", "<",
    "Ю", ">",
    ",", "?",
}

func main() {
    // читаем STDIN
    var data []byte
    for {
        chunk := make([]byte, 50)
        n, err := os.Stdin.Read(chunk)
        if err == nil && n > 0 {
            // берем байты только до первого ноль-символа
            for _, b := range chunk {
                if b == 0 {
                    break
                }
                data = append(data, b)
            }
        } else {
            break
        }
    }
    if len(data) >= 0 {
        _, _ = os.Stdout.WriteString(strings.NewReplacer(pairs...).Replace(string(data)))
    }
}
